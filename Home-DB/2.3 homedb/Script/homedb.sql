-- MySQL Script generated by MySQL Workbench
-- Thu Jul 20 02:43:31 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema homedb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `homedb` ;

-- -----------------------------------------------------
-- Schema homedb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `homedb` DEFAULT CHARACTER SET utf8 ;
USE `homedb` ;

-- -----------------------------------------------------
-- Table `homedb`.`log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `homedb`.`log` ;

CREATE TABLE IF NOT EXISTS `homedb`.`log` (
  `sid` INT(11) NOT NULL,
  `state` TINYINT(1) NOT NULL,
  `val` DECIMAL(10,0) NULL,
  `time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `homedb`.`sensors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `homedb`.`sensors` ;

CREATE TABLE IF NOT EXISTS `homedb`.`sensors` (
  `sid` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NULL DEFAULT NULL,
  `fid` INT(11) NOT NULL,
  `rid` INT(11) NOT NULL,
  `xLoc` INT(11) NULL DEFAULT NULL,
  `yLoc` INT(11) NULL DEFAULT NULL,
  `sensorType` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`sid`))
ENGINE = InnoDB
AUTO_INCREMENT = 7
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `homedb`.`alarm`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `homedb`.`alarm` ;

CREATE TABLE IF NOT EXISTS `homedb`.`alarm` (
  `sensors_sid` INT(10) UNSIGNED NOT NULL,
  `state` TINYINT(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`sensors_sid`),
  CONSTRAINT `fk_fire_sensors1`
    FOREIGN KEY (`sensors_sid`)
    REFERENCES `homedb`.`sensors` (`sid`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `homedb`.`light`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `homedb`.`light` ;

CREATE TABLE IF NOT EXISTS `homedb`.`light` (
  `sensors_sid` INT(10) UNSIGNED NOT NULL,
  `state` TINYINT(1) NOT NULL DEFAULT '0',
  `maxVal` DECIMAL(2,0) NULL DEFAULT '50',
  PRIMARY KEY (`sensors_sid`),
  CONSTRAINT `fk_light_sensors`
    FOREIGN KEY (`sensors_sid`)
    REFERENCES `homedb`.`sensors` (`sid`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `homedb`.`appliances`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `homedb`.`appliances` ;

CREATE TABLE IF NOT EXISTS `homedb`.`appliances` (
  `sensors_sid` INT(10) UNSIGNED NOT NULL,
  `state` TINYINT(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`sensors_sid`),
  CONSTRAINT `fk_safety_sensors1`
    FOREIGN KEY (`sensors_sid`)
    REFERENCES `homedb`.`sensors` (`sid`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `homedb`.`temp`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `homedb`.`temp` ;

CREATE TABLE IF NOT EXISTS `homedb`.`temp` (
  `sensors_sid` INT(10) UNSIGNED NOT NULL,
  `state` TINYINT(1) NOT NULL DEFAULT '0',
  `curVal` DECIMAL(2,0) NULL DEFAULT '27',
  `preVal` DECIMAL(2,0) NULL DEFAULT '24',
  PRIMARY KEY (`sensors_sid`),
  CONSTRAINT `fk_currtemp_sensors1`
    FOREIGN KEY (`sensors_sid`)
    REFERENCES `homedb`.`sensors` (`sid`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `homedb`.`updateq`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `homedb`.`updateq` ;

CREATE TABLE IF NOT EXISTS `homedb`.`updateq` (
  `sid` INT(11) NOT NULL,
  `state` TINYINT(1) NOT NULL DEFAULT '0',
  `val` DECIMAL(10,0) NULL)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `homedb`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `homedb`.`users` ;

CREATE TABLE IF NOT EXISTS `homedb`.`users` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(50) NOT NULL,
  `email` VARCHAR(60) NOT NULL,
  `password` VARCHAR(60) NOT NULL,
  `phone` VARCHAR(25) NOT NULL,
  `token` VARCHAR(30) NULL DEFAULT NULL,
  `ftoken` TEXT NULL DEFAULT NULL,
  `is_admin` TINYINT(1) NULL DEFAULT '0',
  `is_approved` TINYINT(1) NULL DEFAULT '0',
  `createTime` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

USE `homedb`;

DELIMITER $$

USE `homedb`$$
DROP TRIGGER IF EXISTS `homedb`.`sensors_AFTER_INSERT` $$
USE `homedb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `homedb`.`sensors_AFTER_INSERT` AFTER INSERT ON `sensors` FOR EACH ROW
BEGIN
SET @table = NEW.sensorType;
SET @id = NEW.sid;

IF (@table = "light") THEN
INSERT INTO `light`(sensors_sid) VALUES (@id);
END IF;

IF (@table = "alarm") THEN
INSERT INTO `alarm`(sensors_sid) VALUES (@id);
END IF;

IF (@table = "appliances") THEN
INSERT INTO `appliances`(sensors_sid) VALUES (@id);
END IF;

IF (@table = "temp") THEN
INSERT INTO `temp`(sensors_sid) VALUES (@id);
END IF;
END$$


USE `homedb`$$
DROP TRIGGER IF EXISTS `homedb`.`alarm_AFTER_UPDATE` $$
USE `homedb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `homedb`.`alarm_AFTER_UPDATE` AFTER UPDATE ON `alarm` FOR EACH ROW
-- Values in this table can only be changed by RPi
-- Inserts each update in the `log` table
BEGIN
INSERT INTO `homedb`.`log`(sid, state) VALUES(NEW.sensors_sid, NEW.state);
END$$


USE `homedb`$$
DROP TRIGGER IF EXISTS `homedb`.`light_AFTER_UPDATE` $$
USE `homedb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `homedb`.`light_AFTER_UPDATE` AFTER UPDATE ON `light` FOR EACH ROW
-- Values in this table can only be changed by `user`
-- Inserts each update in the `log` table,
-- and if state or maxVal changed then insert in `updateq` table also
BEGIN
IF (OLD.state != NEW.state OR OLD.maxVal != NEW.maxVal)
THEN
--INSERT INTO `homedb`.`updateq`(sid, state, val) VALUES(NEW.sensors_sid, NEW.state, NEW.maxVal);
END IF;
INSERT INTO `homedb`.`log`(sid, state, val) VALUES(NEW.sensors_sid, NEW.state, NEW.maxVal);
END$$


USE `homedb`$$
DROP TRIGGER IF EXISTS `homedb`.`appliances_AFTER_UPDATE` $$
USE `homedb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `homedb`.`appliances_AFTER_UPDATE` AFTER UPDATE ON `appliances` FOR EACH ROW
-- Values in this table can only be changed by `user`
-- Inserts each update in the `log` table,
-- and if state changed then insert in `updateq` table also
BEGIN
IF (OLD.state != NEW.state)
THEN
--INSERT INTO `homedb`.`updateq`(sid, state) VALUES(NEW.sensors_sid, NEW.state);
END IF;
INSERT INTO `homedb`.`log`(sid, state) VALUES(NEW.sensors_sid, NEW.state);
END$$


USE `homedb`$$
DROP TRIGGER IF EXISTS `homedb`.`temp_AFTER_UPDATE` $$
USE `homedb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `homedb`.`temp_AFTER_UPDATE` AFTER UPDATE ON `temp` FOR EACH ROW
-- Values in this table can only be changed by `user` or RPi
-- Inserts each update in the `log` table using changed state,
-- and if state or preVal changed then insert in `updateq` table also
BEGIN
IF (OLD.state != NEW.state OR OLD.preVal != NEW.preVal)
THEN
--INSERT INTO `homedb`.`updateq`(sid, state, val) VALUES(NEW.sensors_sid, NEW.state, NEW.preVal);
INSERT INTO `homedb`.`log`(sid, state, val) VALUES(NEW.sensors_sid, NEW.state, NEW.preVal);
ELSE
INSERT INTO `homedb`.`log`(sid, state, val) VALUES(NEW.sensors_sid, NEW.state, NEW.curVal);
END IF;
DELETE FROM `homedb`.`log` WHERE `time` < DATE_SUB(CURRENT_TIMESTAMP,INTERVAL 7 DAY);
END$$


USE `homedb`$$
DROP TRIGGER IF EXISTS `homedb`.`updateq_BEFORE_DELETE` $$
USE `homedb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `homedb`.`updateq_BEFORE_DELETE` BEFORE DELETE ON `updateq` FOR EACH ROW
BEGIN
-- INSERT INTO `homedb`.`log`(sid, state, val, time) VALUES(OLD.sid, OLD.state, OLD.val) ;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `homedb`.`sensors`
-- -----------------------------------------------------
START TRANSACTION;
USE `homedb`;
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (1, 'light_1', 1, 1, NULL, NULL, 'light');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (2, 'fire_1', 1, 1, NULL, NULL, 'alarm');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (3, 'temperature_1', 1, 1, NULL, NULL, 'temp');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (4, 'PIR_1 motion', 1, 1, NULL, NULL, 'alarm');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (5, 'home door', 1, 1, NULL, NULL, 'appliances');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (6, 'TV_1', 1, 1, NULL, NULL, 'appliances');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (7, 'light_2', 1, 2, NULL, NULL, 'light');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (8, 'fire_2', 1, 2, NULL, NULL, 'alarm');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (9, 'gasleakage', 1, 2, NULL, NULL, 'alarm');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (10, 'waterleakage_1', 1, 2, NULL, NULL, 'alarm');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (11, 'fridge', 1, 2, NULL, NULL, 'appliances');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (12, 'light_3', 1, 3, NULL, NULL, 'light');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (13, 'fire_3', 1, 3, NULL, NULL, 'alarm');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (14, 'PIR_2 motion', 1, 3, NULL, NULL, 'alarm');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (15, 'garage door', 1, 3, NULL, NULL, 'appliances');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (16, 'light_4', 2, 4, NULL, NULL, 'light');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (17, 'fire_4', 2, 4, NULL, NULL, 'alarm');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (18, 'temperature_4', 2, 4, NULL, NULL, 'temp');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (19, 'TV_4', 2, 4, NULL, NULL, 'appliances');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (20, 'light_5', 2, 5, NULL, NULL, 'light');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (21, 'fire_5', 2, 5, NULL, NULL, 'alarm');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (22, 'waterleakage_2', 2, 5, NULL, NULL, 'alarm');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (23, 'washer', 2, 5, NULL, NULL, 'appliances');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (24, 'light_6', 3, 6, NULL, NULL, 'light');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (25, 'fire_6', 3, 6, NULL, NULL, 'alarm');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (26, 'temperature_6', 3, 6, NULL, NULL, 'temp');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (27, 'TV_6', 3, 6, NULL, NULL, 'appliances');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (28, 'light_7', 3, 7, NULL, NULL, 'light');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (29, 'fire_7', 3, 7, NULL, NULL, 'alarm');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (30, 'temperature_7', 3, 7, NULL, NULL, 'temp');
INSERT INTO `homedb`.`sensors` (`sid`, `name`, `fid`, `rid`, `xLoc`, `yLoc`, `sensorType`) VALUES (31, 'TV_7', 3, 7, NULL, NULL, 'appliances');

COMMIT;

